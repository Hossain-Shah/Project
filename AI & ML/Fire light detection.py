import cv2
import numpy as np
img = cv2.pyrDown(cv2.imread('fire-flames-on-black-background-260nw-736335832.jpg', cv2.IMREAD_UNCHANGED))
img2 = cv2.pyrDown(cv2.imread('images.jpg', cv2.IMREAD_UNCHANGED))
ret, threshed_img = cv2.threshold(cv2.cvtColor(img, cv2.COLOR_BGR2GRAY), 127, 255, cv2.THRESH_BINARY)
ret2, threshed_img2 = cv2.threshold(cv2.cvtColor(img2, cv2.COLOR_BGR2GRAY), 127, 255, cv2.THRESH_BINARY)
contours, hier = cv2.findContours(threshed_img, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
contours2, hier2 = cv2.findContours(threshed_img2, cv2.RETR_TREE, cv2.CHAIN_APPROX_SIMPLE)
for c in contours:
    x, y, w, h = cv2.boundingRect(c)
    cv2.rectangle(img, (x, y), (x+w, y+h), (0, 255, 0), 2)
    rect = cv2.minAreaRect(c)
    box = cv2.boxPoints(rect)
    box = np.int0(box)
    cv2.drawContours(img, [box], 0, (0, 0, 255))
    (x, y), radius = cv2.minEnclosingCircle(c)
    center = (int(x), int(y))
    radius = int(radius)
    img = cv2.circle(img, center, radius, (255, 0, 0), 2)
print(len(contours))
cv2.drawContours(img, contours, -1, (255, 255, 0), 1)
cv2.imshow("contours", img)
cv2.waitKey(0)
for c2 in contours2:
    x, y, w, h = cv2.boundingRect(c2)
    cv2.rectangle(img2, (x, y), (x+w, y+h), (0, 255, 0), 2)
    rect = cv2.minAreaRect(c2)
    box = cv2.boxPoints(rect)
    box = np.int0(box)
    cv2.drawContours(img2, [box], 0, (0, 0, 255))
    (x, y), radius = cv2.minEnclosingCircle(c2)
    center = (int(x), int(y))
    radius = int(radius)
    img2 = cv2.circle(img2, center, radius, (255, 0, 0), 2)
print(len(contours2))
cv2.drawContours(img2, contours2, -1, (255, 255, 0), 1)
cv2.imshow("contours", img2)
cv2.waitKey(0)
